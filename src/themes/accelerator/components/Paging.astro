---
import type { Link } from '@util/PageLinks';
import type { MarkdownInstance, Page } from 'astro';
import { Translations, Lang } from '@util/Languages';
import { addSlashToAddress } from '@util/Url';

// Properties
type Props = {
  lang: string;
  page: Page<MarkdownInstance<Record<string, any>>>,
  pageLinks: Link[],
};
const { lang, page, pageLinks } = Astro.props as Props;

// Language
const _ = Lang(lang);

// Logic
// -
---
<nav class="post-paging" aria-label={ _(Translations.aria.paging) }>
  {page.url.prev
    ? <a href={ addSlashToAddress(page.url.prev) }>{ _(Translations.articles.previous) }</a>
    : <span>{ _(Translations.articles.previous) }</span>}
  {pageLinks.map((link) => (
      <a href={ addSlashToAddress(link.url) } aria-current={ link.ariaCurrent } class={ link.class }>{ link.title }</a>
  ))}
  {page.url.next
    ? <a href={ addSlashToAddress(page.url.next) }>{ _(Translations.articles.next) }</a>
    : <span>{ _(Translations.articles.next) }</span>}
  </nav>