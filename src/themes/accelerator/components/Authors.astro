---
import { SITE, Frontmatter } from '@config';

import t from '@util/language.json';
import { Lang } from '@util/Languages.astro';

import { formatDate, formatModifiedDate } from '@util/DateFormat.astro';
import { getAuthorList } from '@util/Authors.astro';
import { addSlashToAddress } from '@util/Url.astro';

// Properties
type Props = {
  lang: string;
  frontmatter: Frontmatter;
};
const { lang, frontmatter } = Astro.props as Props;

// Language
const _ = Lang(lang);

// Logic
const authorList = await getAuthorList(frontmatter);

const author = authorList.writers.slice(0, 1)[0];
const contributors = authorList.writers.slice(1);
---
{authorList.writers.length > 0 && 
<div class="post-meta">
  {authorList.image?.src && 
  <img src={ authorList.image.src } alt={ authorList.image.alt } width="50" height="50" class="author-image" />
  }
  <div class="author-info">
    <span>{ _(t.post.written_by) }
      {author &&
        <a href={ addSlashToAddress(author.url) + '1/' } itemprop="author">{ author.frontmatter.title }</a>
      }
      {contributors.map((writer) => (
        <a href={ addSlashToAddress(writer.url) + '1/' } itemprop="contributor">{ writer.frontmatter.title }</a>
      ))}.
      <time datetime={ frontmatter.pubDate.toString() } itemprop="datePublished">
      { formatDate(frontmatter, lang, SITE) }
      </time>
      {frontmatter.modDate &&
      <time datetime={ frontmatter.modDate.toString() } itemprop="dateModified">
        { _(t.post.last_modified) } { formatModifiedDate(frontmatter, lang, SITE) }
      </time>
      }
    </span>
  </div>
</div>
}