---
import type { Frontmatter } from '@config';

import t from '@util/language.json';
import { Lang } from '@util/Languages';

import { taxonomyLinks } from '@util/Taxonomy';

// Properties
type Props = {
  lang: string;
  frontmatter: Frontmatter;
};
const { lang, frontmatter } = Astro.props as Props;

// Language
const _ = Lang(lang);

// Logic
const categories = frontmatter.categories ?? [];
const tags = frontmatter.tags ?? [];

const links = taxonomyLinks(_);
const hasTaxonomy = (categories.length + tags.length) > 0;
---
{hasTaxonomy && (
  <div class="post-taxonomy">
    {tags.length > 0 && (
    <div class="post-tag">
      <h2>{ _(t.articles.tag_title) }: </h2>
      <ul itemprop="keywords">
      {tags.map(tag => 
        <li><a href={ links.getTagLink(tag) }>{ tag }</a></li>
      )}
      </ul>
    </div>
    )}
    {categories.length > 0 && (
    <div class="post-cat">
      <h2>{ _(t.articles.category_title) }: </h2>
      <ul>
      {categories.map(category => 
        <li><a href={ links.getCategoryLink(category) } itemprop="articleSection">{ category }</a></li>
      )}
      </ul>
    </div>
    )}
  </div>
)}