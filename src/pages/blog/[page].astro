---
// For listing all articles in this folder
import t from '@util/language.json';
import { Lang } from '@util/Languages.astro';

import type { Page, MarkdownInstance } from 'astro';

import { Frontmatter, SITE } from '@config';
import { getPageLinks } from '@util/PageLinks.astro';
import { sortByPubDateDesc } from '@util/PageTypeFilters.astro';

import Default from '@layouts/Default.astro';
import ArticleList from '@components/ArticleList.astro';
import Paging from '@components/Paging.astro';

const lang = SITE.default.lang;

const frontmatter: Frontmatter = {
  layout: 'src/layouts/Default.astro',
  title: 'Articles',
  pubDate: new Date(2022, 9, 17),
  keywords: 'articles,astro,accelerator',
  description: 'Astro Accelerator articles.',
  bannerImage: {
      src: '/img/surface-accessories.png',
      alt: 'Dummy image',
  }
};

// Props
type Props = {
  page: Page<MarkdownInstance<Record<string, any>>>;
  headings: { depth: number; slug: string; text: string; }[];
};
const { page, headings } = Astro.props as Props;

// Language
const _ = Lang(lang);

// Logic
export async function getStaticPaths({ paginate }: any) {
  const sourcePosts = await Astro.glob('./**/*.md');
  const urlPosts = sourcePosts
    .filter(p => p.url != null && p.url != '')
    .sort(sortByPubDateDesc);

  return paginate(urlPosts, { pageSize: SITE.pageSize });
}

// Page Links
const pageLinks = getPageLinks(SITE.pageLinks, page.lastPage, page.currentPage, page.url.current);
---
<Default frontmatter={ frontmatter } headings={ headings }>
  <h2>Page {page.currentPage}</h2>
  <ArticleList lang={ lang } posts={ page.data } />
  <Paging lang={ lang } page={ page } pageLinks={ pageLinks } />
</Default>