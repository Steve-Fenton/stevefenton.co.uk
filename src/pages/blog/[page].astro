---
// warning: This file is overwritten by Astro Accelerator

// For listing all articles in this folder
import { PostFiltering, PostOrdering, PostPaging } from 'astro-accelerator-utils';
import type { Frontmatter } from 'astro-accelerator-utils/types/Frontmatter';
import { Translations, Lang } from '@util/Languages';
import type { Page, MarkdownInstance } from 'astro';
import { SITE } from '@config';
import Default from 'src/layouts/Default.astro';
import ArticleList from '@components/ArticleList.astro';
import Paging from '@components/Paging.astro';

const lang = SITE.default.lang;

// Props
type Props = {
  page: Page<MarkdownInstance<Record<string, any>>>;
  headings: { depth: number; slug: string; text: string; }[];
  pubDate: Date;
};
const { page, headings, pubDate } = Astro.props as Props;

const frontmatter: Frontmatter = {
  layout: 'src/layouts/Default.astro',
  title: 'Articles',
  keywords: 'articles,astro,accelerator',
  description: 'Astro Accelerator articles.',
  pubDate: pubDate,
  robots: 'noindex, follow'
};

// Language
const _ = Lang(lang);

// Logic
export async function getData() {
  const sourcePosts = await Astro.glob('./**/*.md');
  const posts = sourcePosts
    .filter(PostFiltering.isListable)
    .sort(PostOrdering.sortByPubDateDesc);

  return posts;
}

export async function getStaticPaths({ paginate }: any) {
  let data = await getData();
  return paginate(data, {
    props: { pubDate: data[0].frontmatter.pubDate },
    pageSize: SITE.pageSize
  });
}

// Page Links
const pageLinks = PostPaging.getPageLinks(SITE.pageLinks, page.lastPage, page.currentPage, page.url.current);
---
<Default frontmatter={ frontmatter } headings={ headings }>
  <h2>{ _(Translations.articles.page_title).replace('{n}', page.currentPage.toString())}</h2>
  <ArticleList lang={ lang } posts={ page.data } />
  <Paging lang={ lang } page={ page } pageLinks={ pageLinks } />
</Default>